LocalHost

Localhost refers to the computer you're currently working on.
It's essentially a loopback address that points to the machine itself,
allowing it to communicate with itself over a network. 

ping localhost -> to get the ip of the machine 
ping google.com -> to get the ip of the edomain

IPv4 : 132.11.11.133 
IPv6 : [2620:1ec:33::10]:443 

Local network, routing(mild hosting)

If you have multiple laptops on the same wifi router, you can access one machine from another by using their private IP address.
This is a mild version of deploying your app on your local network (or whats called the intranet)

create an express server 

ifconfig this will give you all the network addresses on the machine

npx serve also serves the files on the private IP

override the domain name resolves to by obberriding the hosts file 

vi /etc/hosts 
127.0.0.1 : facebook.com

go to facebook.com:3000 and you can get some credentials

DNS propogation

Deploying apps 

1. renting servers on cloud (AWS, Azure, GCD, Digital Ocean)
2. renting your cloud centers
3. Self Hosting (buying a CPU rack in house)
4. Serverless providers 
5. Cloud native options(k8s)

Virtual Machines 

VMs run on a physical server (called the host) but are abstracted through a layer of virtualization software called a hypervisor (e.g., VMware, KVM).
This hypervisor divides the host machine’s resources (CPU, memory, storage) into separate virtual machines.

Each VM acts like a completely independent machine, even though they share the underlying hardware.
You can run different operating systems and applications in different VMs on the same physical server.

bitcoin mining will not run optimally on a virtual machine it either runs on a server in house or on a bare metal servers

In a bare-metal setup, an operating system (OS) runs directly on the physical hardware without a hypervisor in between. There’s no virtualization layer.

Since there's no hypervisor, bare-metal systems tend to offer better performance, as the OS can directly access all the server’s resources without sharing them with other instances.
This is especially important for high-performance applications like large databases, gaming servers, or mining crypto

SSH protocol 

The SSH protocol (Secure Shell) is a cryptographic network protocol that allows secure communication between two systems, typically for remote administration.
It’s most commonly used to log into remote servers and execute commands, but it also facilitates secure file transfers and other operations.

Key Features of SSH:

1. Encryption: SSH encrypts the data that’s sent between the client and the server, so even if someone intercepts the connection, they can’t read the data. This makes it much more secure than older protocols like Telnet or FTP, which transmit data in plaintext.
2. Authentication: SSH can use two methods of authentication:
    - Password-based: You enter a password to authenticate yourself to the remote system.
    - Public Key-based: A more secure method, where the client uses a private key to authenticate, and the server checks it against the corresponding public key. This eliminates the need for passwords and provides an extra layer of security.
3. Integrity: SSH ensures the integrity of data, meaning that data cannot be tampered with while it’s in transit. If someone tries to alter the data being sent, the connection will be immediately disrupted.

on digital ocean create a droplet: this is a VM

Choose Authentication Method
password or ssh 

get the public IP of the server

ssh root@SERVER_IP -> you can interact with your machine 

public key cryptography 

user -> public - private key pair

message + private key -> hjfuahfaifa 
hjfuahfaifa + public key -> message 

the reverse is also true

